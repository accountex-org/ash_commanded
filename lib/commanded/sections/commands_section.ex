defmodule AshCommanded.Commanded.Sections.CommandsSection do
  @moduledoc false

  def build do
    %Spark.Dsl.Section{
      name: :commands,
      describe: "Command definitions for the Commanded aggregate.",
      schema: [],
      entities: [command_entity()]
    }
  end

  defp command_entity do
    %Spark.Dsl.Entity{
      name: :command,
      describe: "A command that will map to a Commanded command module.",
      target: AshCommanded.Commanded.Command,
      args: [:name],
      schema: [
        name: [type: :atom, required: true],
        fields: [
          type: {:list, :atom},
          required: true,
          doc: "Fields to include in the generated struct."
        ],
        identity_field: [
          type: :atom,
          required: false,
          doc: "Field that identifies the aggregate root."
        ],
        command_name: [
          type: :atom,
          required: false,
          doc: "Optional custom module name for the command struct."
        ],
        handler_name: [
          type: :atom,
          required: false,
          doc: "Optional custom function clause name for the handler module."
        ],
        autogenerate?: [
          type: :boolean,
          default: true,
          doc: "If false, the command module will not be autogenerated."
        ],
        autogenerate_handler?: [
          type: :boolean,
          default: true,
          doc: "If false, no command handler clause will be generated."
        ]
      ]
    }
  end
end
